{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ItemNotFound",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "IdToGameItemsInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "createGameItemsInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_itemID",
          "type": "uint8"
        }
      ],
      "name": "redeemGameToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b50604051806040016040528060128152602001712232b3b2b71023b0b6b4b733902a37b5b2b760711b815250604051806040016040528060038152602001621111d560ea1b81525081600390816200006a9190620002b4565b506004620000798282620002b4565b505033608052506200009430678ac7230489e800006200009a565b620003a8565b6001600160a01b038216620000ca5760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b620000d860008383620000dc565b5050565b6001600160a01b0383166200010b578060026000828254620000ff919062000380565b909155506200017f9050565b6001600160a01b03831660009081526020819052604090205481811015620001605760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000c1565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166200019d57600280548290039055620001bc565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200020291815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200023a57607f821691505b6020821081036200025b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002af57600081815260208120601f850160051c810160208610156200028a5750805b601f850160051c820191505b81811015620002ab5782815560010162000296565b5050505b505050565b81516001600160401b03811115620002d057620002d06200020f565b620002e881620002e1845462000225565b8462000261565b602080601f831160018114620003205760008415620003075750858301515b600019600386901b1c1916600185901b178555620002ab565b600085815260208120601f198616915b82811015620003515788860151825594840194600190910190840162000330565b5085821015620003705787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115620003a257634e487b7160e01b600052601160045260246000fd5b92915050565b608051610eb5620003d2600039600081816101c20152818161036001526103ed0152610eb56000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806350011f4611610097578063a9059cbb11610066578063a9059cbb14610204578063dd62ed3e14610217578063ececd6be14610250578063ee63b85e1461026357600080fd5b806350011f461461019757806370a08231146101aa5780638da5cb5b146101bd57806395d89b41146101fc57600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce5671461016057806340c10f191461016f57806342966c681461018457600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610285565b60405161010f9190610a36565b60405180910390f35b61012b610126366004610a65565b610317565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b366004610a8f565b610331565b6040516012815260200161010f565b61018261017d366004610a65565b610355565b005b610182610192366004610acb565b6103ac565b6101826101a5366004610ae4565b6103e2565b61013f6101b8366004610b5c565b6104c9565b6101e47f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161010f565b6101026104e7565b61012b610212366004610a65565b6104f6565b61013f610225366004610b77565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61018261025e366004610baa565b61055d565b610276610271366004610acb565b6105d3565b60405161010f93929190610bcd565b60606003805461029490610c01565b80601f01602080910402602001604051908101604052809291908181526020018280546102c090610c01565b801561030d5780601f106102e25761010080835404028352916020019161030d565b820191906000526020600020905b8154815290600101906020018083116102f057829003601f168201915b5050505050905090565b600033610325818585610688565b60019150505b92915050565b60003361033f85828561069a565b61034a858585610718565b506001949350505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461039e576040516330cd747160e01b815260040160405180910390fd5b6103a88282610777565b5050565b806103b6336104c9565b10156103d557604051631e9acf1760e31b815260040160405180910390fd5b6103df33826107ad565b50565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461042b576040516330cd747160e01b815260040160405180910390fd5b6005805490600061043b83610c51565b9091555050600554600090815260066020526040902080546001600160a01b0319163317815560018101610470848683610cce565b50600281018290556005546000908152600660205260409020815481546001600160a01b0319166001600160a01b0390911617815581906001808201906104b990840182610d8f565b5060029182015491015550505050565b6001600160a01b03811660009081526020819052604081205461032b565b60606004805461029490610c01565b600081610502336104c9565b101561054c5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064015b60405180910390fd5b61055683836107e3565b9392505050565b6005548160ff16106105825760405163d3ed043d60e01b815260040160405180910390fd5b60ff8116600090815260066020526040902080546002909101546105af916001600160a01b0316906104f6565b5060ff16600090815260066020526040902080546001600160a01b03191633179055565b600660205260009081526040902080546001820180546001600160a01b0390921692916105ff90610c01565b80601f016020809104026020016040519081016040528092919081815260200182805461062b90610c01565b80156106785780601f1061064d57610100808354040283529160200191610678565b820191906000526020600020905b81548152906001019060200180831161065b57829003601f168201915b5050505050908060020154905083565b61069583838360016107f1565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610712578181101561070357604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610543565b610712848484840360006107f1565b50505050565b6001600160a01b03831661074257604051634b637e8f60e11b815260006004820152602401610543565b6001600160a01b03821661076c5760405163ec442f0560e01b815260006004820152602401610543565b6106958383836108c6565b6001600160a01b0382166107a15760405163ec442f0560e01b815260006004820152602401610543565b6103a8600083836108c6565b6001600160a01b0382166107d757604051634b637e8f60e11b815260006004820152602401610543565b6103a8826000836108c6565b600033610325818585610718565b6001600160a01b03841661081b5760405163e602df0560e01b815260006004820152602401610543565b6001600160a01b03831661084557604051634a1406b160e11b815260006004820152602401610543565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561071257826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516108b891815260200190565b60405180910390a350505050565b6001600160a01b0383166108f15780600260008282546108e69190610e6c565b909155506109639050565b6001600160a01b038316600090815260208190526040902054818110156109445760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610543565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661097f5760028054829003905561099e565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516109e391815260200190565b60405180910390a3505050565b6000815180845260005b81811015610a16576020818501810151868301820152016109fa565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061055660208301846109f0565b80356001600160a01b0381168114610a6057600080fd5b919050565b60008060408385031215610a7857600080fd5b610a8183610a49565b946020939093013593505050565b600080600060608486031215610aa457600080fd5b610aad84610a49565b9250610abb60208501610a49565b9150604084013590509250925092565b600060208284031215610add57600080fd5b5035919050565b600080600060408486031215610af957600080fd5b833567ffffffffffffffff80821115610b1157600080fd5b818601915086601f830112610b2557600080fd5b813581811115610b3457600080fd5b876020828501011115610b4657600080fd5b6020928301989097509590910135949350505050565b600060208284031215610b6e57600080fd5b61055682610a49565b60008060408385031215610b8a57600080fd5b610b9383610a49565b9150610ba160208401610a49565b90509250929050565b600060208284031215610bbc57600080fd5b813560ff8116811461055657600080fd5b6001600160a01b0384168152606060208201819052600090610bf1908301856109f0565b9050826040830152949350505050565b600181811c90821680610c1557607f821691505b602082108103610c3557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600060018201610c6357610c63610c3b565b5060010190565b634e487b7160e01b600052604160045260246000fd5b601f82111561069557600081815260208120601f850160051c81016020861015610ca75750805b601f850160051c820191505b81811015610cc657828155600101610cb3565b505050505050565b67ffffffffffffffff831115610ce657610ce6610c6a565b610cfa83610cf48354610c01565b83610c80565b6000601f841160018114610d2e5760008515610d165750838201355b600019600387901b1c1916600186901b178355610d88565b600083815260209020601f19861690835b82811015610d5f5786850135825560209485019460019092019101610d3f565b5086821015610d7c5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b818103610d9a575050565b610da48254610c01565b67ffffffffffffffff811115610dbc57610dbc610c6a565b610dd081610dca8454610c01565b84610c80565b6000601f821160018114610e045760008315610dec5750848201545b600019600385901b1c1916600184901b178455610d88565b600085815260209020601f19841690600086815260209020845b83811015610e3e5782860154825560019586019590910190602001610e1e565b5085831015610e5c5781850154600019600388901b60f8161c191681555b5050505050600190811b01905550565b8082018082111561032b5761032b610c3b56fea26469706673582212204a5f58407b740dc590e64720d2e24c1be2695562f25df14ea84c2be84dd67f3864736f6c63430008150033",
    "sourceMap": "114:2072:0:-:0;;;373:121;;;;;;;;;;1896:113:2;;;;;;;;;;;;;-1:-1:-1;;;1896:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:2;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:2;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;440:10:0::1;432:18;::::0;-1:-1:-1;460:27:0::1;474:4;481:5;460;:27::i;:::-;114:2072:::0;;7721:208:2;-1:-1:-1;;;;;7791:21:2;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:2;;7864:1;7835:32;;;2881:51:6;2854:18;;7835:32:2;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:2;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:2;;-1:-1:-1;6356:540:2;;-1:-1:-1;;;;;6570:15:2;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:2;;-1:-1:-1;;;;;3390:32:6;;6649:50:2;;;3372:51:6;3439:18;;;3432:34;;;3482:18;;;3475:34;;;3345:18;;6649:50:2;3170:345:6;6599:115:2;-1:-1:-1;;;;;6834:15:2;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:2;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:2;7355:4;-1:-1:-1;;;;;7346:25:2;;7365:5;7346:25;;;;3666::6;;3654:2;3639:18;;3520:177;7346:25:2;;;;;;;;6271:1107;;;:::o;14:127:6:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:6;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:6;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:6;;;2580:26;2531:89;-1:-1:-1;;1335:1:6;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:6;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:6;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:6;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:6:o;2943:222::-;3008:9;;;3029:10;;;3026:133;;;3081:10;3076:3;3072:20;3069:1;3062:31;3116:4;3113:1;3106:15;3144:4;3141:1;3134:15;3026:133;2943:222;;;;:::o;3520:177::-;114:2072:0;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c806350011f4611610097578063a9059cbb11610066578063a9059cbb14610204578063dd62ed3e14610217578063ececd6be14610250578063ee63b85e1461026357600080fd5b806350011f461461019757806370a08231146101aa5780638da5cb5b146101bd57806395d89b41146101fc57600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce5671461016057806340c10f191461016f57806342966c681461018457600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610285565b60405161010f9190610a36565b60405180910390f35b61012b610126366004610a65565b610317565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b366004610a8f565b610331565b6040516012815260200161010f565b61018261017d366004610a65565b610355565b005b610182610192366004610acb565b6103ac565b6101826101a5366004610ae4565b6103e2565b61013f6101b8366004610b5c565b6104c9565b6101e47f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161010f565b6101026104e7565b61012b610212366004610a65565b6104f6565b61013f610225366004610b77565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61018261025e366004610baa565b61055d565b610276610271366004610acb565b6105d3565b60405161010f93929190610bcd565b60606003805461029490610c01565b80601f01602080910402602001604051908101604052809291908181526020018280546102c090610c01565b801561030d5780601f106102e25761010080835404028352916020019161030d565b820191906000526020600020905b8154815290600101906020018083116102f057829003601f168201915b5050505050905090565b600033610325818585610688565b60019150505b92915050565b60003361033f85828561069a565b61034a858585610718565b506001949350505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461039e576040516330cd747160e01b815260040160405180910390fd5b6103a88282610777565b5050565b806103b6336104c9565b10156103d557604051631e9acf1760e31b815260040160405180910390fd5b6103df33826107ad565b50565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461042b576040516330cd747160e01b815260040160405180910390fd5b6005805490600061043b83610c51565b9091555050600554600090815260066020526040902080546001600160a01b0319163317815560018101610470848683610cce565b50600281018290556005546000908152600660205260409020815481546001600160a01b0319166001600160a01b0390911617815581906001808201906104b990840182610d8f565b5060029182015491015550505050565b6001600160a01b03811660009081526020819052604081205461032b565b60606004805461029490610c01565b600081610502336104c9565b101561054c5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064015b60405180910390fd5b61055683836107e3565b9392505050565b6005548160ff16106105825760405163d3ed043d60e01b815260040160405180910390fd5b60ff8116600090815260066020526040902080546002909101546105af916001600160a01b0316906104f6565b5060ff16600090815260066020526040902080546001600160a01b03191633179055565b600660205260009081526040902080546001820180546001600160a01b0390921692916105ff90610c01565b80601f016020809104026020016040519081016040528092919081815260200182805461062b90610c01565b80156106785780601f1061064d57610100808354040283529160200191610678565b820191906000526020600020905b81548152906001019060200180831161065b57829003601f168201915b5050505050908060020154905083565b61069583838360016107f1565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610712578181101561070357604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610543565b610712848484840360006107f1565b50505050565b6001600160a01b03831661074257604051634b637e8f60e11b815260006004820152602401610543565b6001600160a01b03821661076c5760405163ec442f0560e01b815260006004820152602401610543565b6106958383836108c6565b6001600160a01b0382166107a15760405163ec442f0560e01b815260006004820152602401610543565b6103a8600083836108c6565b6001600160a01b0382166107d757604051634b637e8f60e11b815260006004820152602401610543565b6103a8826000836108c6565b600033610325818585610718565b6001600160a01b03841661081b5760405163e602df0560e01b815260006004820152602401610543565b6001600160a01b03831661084557604051634a1406b160e11b815260006004820152602401610543565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561071257826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516108b891815260200190565b60405180910390a350505050565b6001600160a01b0383166108f15780600260008282546108e69190610e6c565b909155506109639050565b6001600160a01b038316600090815260208190526040902054818110156109445760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610543565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661097f5760028054829003905561099e565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516109e391815260200190565b60405180910390a3505050565b6000815180845260005b81811015610a16576020818501810151868301820152016109fa565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061055660208301846109f0565b80356001600160a01b0381168114610a6057600080fd5b919050565b60008060408385031215610a7857600080fd5b610a8183610a49565b946020939093013593505050565b600080600060608486031215610aa457600080fd5b610aad84610a49565b9250610abb60208501610a49565b9150604084013590509250925092565b600060208284031215610add57600080fd5b5035919050565b600080600060408486031215610af957600080fd5b833567ffffffffffffffff80821115610b1157600080fd5b818601915086601f830112610b2557600080fd5b813581811115610b3457600080fd5b876020828501011115610b4657600080fd5b6020928301989097509590910135949350505050565b600060208284031215610b6e57600080fd5b61055682610a49565b60008060408385031215610b8a57600080fd5b610b9383610a49565b9150610ba160208401610a49565b90509250929050565b600060208284031215610bbc57600080fd5b813560ff8116811461055657600080fd5b6001600160a01b0384168152606060208201819052600090610bf1908301856109f0565b9050826040830152949350505050565b600181811c90821680610c1557607f821691505b602082108103610c3557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600060018201610c6357610c63610c3b565b5060010190565b634e487b7160e01b600052604160045260246000fd5b601f82111561069557600081815260208120601f850160051c81016020861015610ca75750805b601f850160051c820191505b81811015610cc657828155600101610cb3565b505050505050565b67ffffffffffffffff831115610ce657610ce6610c6a565b610cfa83610cf48354610c01565b83610c80565b6000601f841160018114610d2e5760008515610d165750838201355b600019600387901b1c1916600186901b178355610d88565b600083815260209020601f19861690835b82811015610d5f5786850135825560209485019460019092019101610d3f565b5086821015610d7c5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b818103610d9a575050565b610da48254610c01565b67ffffffffffffffff811115610dbc57610dbc610c6a565b610dd081610dca8454610c01565b84610c80565b6000601f821160018114610e045760008315610dec5750848201545b600019600385901b1c1916600184901b178455610d88565b600085815260209020601f19841690600086815260209020845b83811015610e3e5782860154825560019586019590910190602001610e1e565b5085831015610e5c5781850154600019600388901b60f8161c191681555b5050505050600190811b01905550565b8082018082111561032b5761032b610c3b56fea26469706673582212204a5f58407b740dc590e64720d2e24c1be2695562f25df14ea84c2be84dd67f3864736f6c63430008150033",
    "sourceMap": "114:2072:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;:::i;:::-;;:::i;:::-;;;1269:14:6;;1262:22;1244:41;;1232:2;1217:18;4293:186:2;1104:187:6;3144:97:2;3222:12;;3144:97;;;1442:25:6;;;1430:2;1415:18;3144:97:2;1296:177:6;5039:244:2;;;;;;:::i;:::-;;:::i;3002:82::-;;;3075:2;1953:36:6;;1941:2;1926:18;3002:82:2;1811:184:6;705:93:0;;;;;;:::i;:::-;;:::i;:::-;;1589:211;;;;;;:::i;:::-;;:::i;1806:378::-;;;;;;:::i;:::-;;:::i;1422:139::-;;;;;;:::i;:::-;;:::i;155:30::-;;;;;;;;-1:-1:-1;;;;;3211:32:6;;;3193:51;;3181:2;3166:18;155:30:0;3047:203:6;2276:93:2;;;:::i;831:239:0:-;;;;;;:::i;:::-;;:::i;3846:140:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:2;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;1101:285:0;;;;;;:::i;:::-;;:::i;311:55::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;2074:89:2:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:5;4420:31:2;735:10:5;4436:7:2;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;5039:244::-;5126:4;735:10:5;5182:37:2;5198:4;735:10:5;5213:5:2;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:2;;5039:244;-1:-1:-1;;;;5039:244:2:o;705:93:0:-;617:10;-1:-1:-1;;;;;631:5:0;617:19;;613:42;;645:10;;-1:-1:-1;;;645:10:0;;;;;;;;;;;613:42;774:17:::1;780:2;784:6;774:5;:17::i;:::-;705:93:::0;;:::o;1589:211::-;1720:7;1696:21;1706:10;1696:9;:21::i;:::-;:31;1692:65;;;1736:21;;-1:-1:-1;;;1736:21:0;;;;;;;;;;;1692:65;1767:26;1773:10;1785:7;1767:5;:26::i;:::-;1589:211;:::o;1806:378::-;617:10;-1:-1:-1;;;;;631:5:0;617:19;;613:42;;645:10;;-1:-1:-1;;;645:10:0;;;;;;;;;;;613:42;1924:6:::1;:8:::0;;;:6:::1;:8;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;1999:6:0::1;::::0;1943:35:::1;1981:25:::0;;;:17:::1;:25;::::0;;;;2017:32;;-1:-1:-1;;;;;;2017:32:0::1;2039:10;2017:32;::::0;;;2059:18;::::1;:26;2080:5:::0;;2059:18;:26:::1;:::i;:::-;-1:-1:-1::0;2095:20:0::1;::::0;::::1;:30:::0;;;2154:6:::1;::::0;2136:25:::1;::::0;;;:17:::1;:25;::::0;;;;:41;;;;-1:-1:-1;;;;;;2136:41:0::1;-1:-1:-1::0;;;;;2136:41:0;;::::1;;::::0;;2095:13;;2136:41;;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2136:41:0::1;::::0;;::::1;::::0;;::::1;::::0;-1:-1:-1;;;;1806:378:0:o;1422:139::-;-1:-1:-1;;;;;3390:18:2;;1503:7:0;3390:18:2;;;;;;;;;;;1529:25:0;3299:116:2;2276:93;2323:13;2355:7;2348:14;;;;;:::i;831:239:0:-;931:12;988:5;963:21;973:10;963:9;:21::i;:::-;:30;;955:63;;;;-1:-1:-1;;;955:63:0;;8672:2:6;955:63:0;;;8654:21:6;8711:2;8691:18;;;8684:30;-1:-1:-1;;;8730:18:6;;;8723:50;8790:18;;955:63:0;;;;;;;;;1038:25;1053:2;1057:5;1038:14;:25::i;:::-;1028:35;831:239;-1:-1:-1;;;831:239:0:o;1101:285::-;1173:6;;1162:7;:17;;;1158:44;;1188:14;;-1:-1:-1;;;1188:14:0;;;;;;;;;;;1158:44;1235:26;;;;;;;:17;:26;;;;;:32;;1281:33;;;;;1213:111;;-1:-1:-1;;;;;1235:32:0;;1213:8;:111::i;:::-;-1:-1:-1;1334:26:0;;;;;;:17;:26;;;;;:45;;-1:-1:-1;;;;;;1334:45:0;1369:10;1334:45;;;1101:285::o;311:55::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;311:55:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;-1:-1:-1;;;;;3952:18:2;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:2;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:2;;-1:-1:-1;;;;;9039:32:6;;10936:60:2;;;9021:51:6;9088:18;;;9081:34;;;9131:18;;;9124:34;;;8994:18;;10936:60:2;8819:345:6;10881:130:2;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:2;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:2;;5807:1;5780:30;;;3193:51:6;3166:18;;5780:30:2;3047:203:6;5735:86:2;-1:-1:-1;;;;;5834:16:2;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:2;;5902:1;5873:32;;;3193:51:6;3166:18;;5873:32:2;3047:203:6;5830:86:2;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;7721:208::-;-1:-1:-1;;;;;7791:21:2;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:2;;7864:1;7835:32;;;3193:51:6;3166:18;;7835:32:2;3047:203:6;7787:91:2;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;8247:206::-;-1:-1:-1;;;;;8317:21:2;;8313:89;;8361:30;;-1:-1:-1;;;8361:30:2;;8388:1;8361:30;;;3193:51:6;3166:18;;8361:30:2;3047:203:6;8313:89:2;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;3610:178::-;3679:4;735:10:5;3733:27:2;735:10:5;3750:2:2;3754:5;3733:9;:27::i;9949:432::-;-1:-1:-1;;;;;10061:19:2;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:2;;10132:1;10103:32;;;3193:51:6;3166:18;;10103:32:2;3047:203:6;10057:89:2;-1:-1:-1;;;;;10159:21:2;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:2;;10231:1;10203:31;;;3193:51:6;3166:18;;10203:31:2;3047:203:6;10155:90:2;-1:-1:-1;;;;;10254:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:2;10342:5;-1:-1:-1;;;;;10333:31:2;;10358:5;10333:31;;;;1442:25:6;;1430:2;1415:18;;1296:177;10333:31:2;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:2;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:2;;-1:-1:-1;6356:540:2;;-1:-1:-1;;;;;6570:15:2;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:2;;-1:-1:-1;;;;;9039:32:6;;6649:50:2;;;9021:51:6;9088:18;;;9081:34;;;9131:18;;;9124:34;;;8994:18;;6649:50:2;8819:345:6;6599:115:2;-1:-1:-1;;;;;6834:15:2;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:2;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:2;7355:4;-1:-1:-1;;;;;7346:25:2;;7365:5;7346:25;;;;1442::6;;1430:2;1415:18;;1296:177;7346:25:2;;;;;;;;6271:1107;;;:::o;14:423:6:-;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;160:3;363:1;356:4;347:6;342:3;338:16;334:27;327:38;426:4;419:2;415:7;410:2;402:6;398:15;394:29;389:3;385:39;381:50;374:57;;;14:423;;;;:::o;442:220::-;591:2;580:9;573:21;554:4;611:45;652:2;641:9;637:18;629:6;611:45;:::i;667:173::-;735:20;;-1:-1:-1;;;;;784:31:6;;774:42;;764:70;;830:1;827;820:12;764:70;667:173;;;:::o;845:254::-;913:6;921;974:2;962:9;953:7;949:23;945:32;942:52;;;990:1;987;980:12;942:52;1013:29;1032:9;1013:29;:::i;:::-;1003:39;1089:2;1074:18;;;;1061:32;;-1:-1:-1;;;845:254:6:o;1478:328::-;1555:6;1563;1571;1624:2;1612:9;1603:7;1599:23;1595:32;1592:52;;;1640:1;1637;1630:12;1592:52;1663:29;1682:9;1663:29;:::i;:::-;1653:39;;1711:38;1745:2;1734:9;1730:18;1711:38;:::i;:::-;1701:48;;1796:2;1785:9;1781:18;1768:32;1758:42;;1478:328;;;;;:::o;2000:180::-;2059:6;2112:2;2100:9;2091:7;2087:23;2083:32;2080:52;;;2128:1;2125;2118:12;2080:52;-1:-1:-1;2151:23:6;;2000:180;-1:-1:-1;2000:180:6:o;2185:666::-;2265:6;2273;2281;2334:2;2322:9;2313:7;2309:23;2305:32;2302:52;;;2350:1;2347;2340:12;2302:52;2390:9;2377:23;2419:18;2460:2;2452:6;2449:14;2446:34;;;2476:1;2473;2466:12;2446:34;2514:6;2503:9;2499:22;2489:32;;2559:7;2552:4;2548:2;2544:13;2540:27;2530:55;;2581:1;2578;2571:12;2530:55;2621:2;2608:16;2647:2;2639:6;2636:14;2633:34;;;2663:1;2660;2653:12;2633:34;2710:7;2703:4;2694:6;2690:2;2686:15;2682:26;2679:39;2676:59;;;2731:1;2728;2721:12;2676:59;2762:4;2754:13;;;;2786:6;;-1:-1:-1;2824:20:6;;;;2811:34;;2185:666;-1:-1:-1;;;;2185:666:6:o;2856:186::-;2915:6;2968:2;2956:9;2947:7;2943:23;2939:32;2936:52;;;2984:1;2981;2974:12;2936:52;3007:29;3026:9;3007:29;:::i;3255:260::-;3323:6;3331;3384:2;3372:9;3363:7;3359:23;3355:32;3352:52;;;3400:1;3397;3390:12;3352:52;3423:29;3442:9;3423:29;:::i;:::-;3413:39;;3471:38;3505:2;3494:9;3490:18;3471:38;:::i;:::-;3461:48;;3255:260;;;;;:::o;3520:269::-;3577:6;3630:2;3618:9;3609:7;3605:23;3601:32;3598:52;;;3646:1;3643;3636:12;3598:52;3685:9;3672:23;3735:4;3728:5;3724:16;3717:5;3714:27;3704:55;;3755:1;3752;3745:12;3794:388;-1:-1:-1;;;;;3999:32:6;;3981:51;;4068:2;4063;4048:18;;4041:30;;;-1:-1:-1;;4088:45:6;;4114:18;;4106:6;4088:45;:::i;:::-;4080:53;;4169:6;4164:2;4153:9;4149:18;4142:34;3794:388;;;;;;:::o;4187:380::-;4266:1;4262:12;;;;4309;;;4330:61;;4384:4;4376:6;4372:17;4362:27;;4330:61;4437:2;4429:6;4426:14;4406:18;4403:38;4400:161;;4483:10;4478:3;4474:20;4471:1;4464:31;4518:4;4515:1;4508:15;4546:4;4543:1;4536:15;4400:161;;4187:380;;;:::o;4572:127::-;4633:10;4628:3;4624:20;4621:1;4614:31;4664:4;4661:1;4654:15;4688:4;4685:1;4678:15;4704:135;4743:3;4764:17;;;4761:43;;4784:18;;:::i;:::-;-1:-1:-1;4831:1:6;4820:13;;4704:135::o;4844:127::-;4905:10;4900:3;4896:20;4893:1;4886:31;4936:4;4933:1;4926:15;4960:4;4957:1;4950:15;5102:545;5204:2;5199:3;5196:11;5193:448;;;5240:1;5265:5;5261:2;5254:17;5310:4;5306:2;5296:19;5380:2;5368:10;5364:19;5361:1;5357:27;5351:4;5347:38;5416:4;5404:10;5401:20;5398:47;;;-1:-1:-1;5439:4:6;5398:47;5494:2;5489:3;5485:12;5482:1;5478:20;5472:4;5468:31;5458:41;;5549:82;5567:2;5560:5;5557:13;5549:82;;;5612:17;;;5593:1;5582:13;5549:82;;;5553:3;;;5102:545;;;:::o;5823:1206::-;5947:18;5942:3;5939:27;5936:53;;;5969:18;;:::i;:::-;5998:94;6088:3;6048:38;6080:4;6074:11;6048:38;:::i;:::-;6042:4;5998:94;:::i;:::-;6118:1;6143:2;6138:3;6135:11;6160:1;6155:616;;;;6815:1;6832:3;6829:93;;;-1:-1:-1;6888:19:6;;;6875:33;6829:93;-1:-1:-1;;5780:1:6;5776:11;;;5772:24;5768:29;5758:40;5804:1;5800:11;;;5755:57;6935:78;;6128:895;;6155:616;5049:1;5042:14;;;5086:4;5073:18;;-1:-1:-1;;6191:17:6;;;6292:9;6314:229;6328:7;6325:1;6322:14;6314:229;;;6417:19;;;6404:33;6389:49;;6524:4;6509:20;;;;6477:1;6465:14;;;;6344:12;6314:229;;;6318:3;6571;6562:7;6559:16;6556:159;;;6695:1;6691:6;6685:3;6679;6676:1;6672:11;6668:21;6664:34;6660:39;6647:9;6642:3;6638:19;6625:33;6621:79;6613:6;6606:95;6556:159;;;6758:1;6752:3;6749:1;6745:11;6741:19;6735:4;6728:33;6128:895;;;5823:1206;;;:::o;7034:1431::-;7149:3;7143:4;7140:13;7137:26;;7156:5;;7034:1431::o;7137:26::-;7186:37;7218:3;7212:10;7186:37;:::i;:::-;7246:18;7238:6;7235:30;7232:56;;;7268:18;;:::i;:::-;7297:97;7387:6;7347:38;7379:4;7373:11;7347:38;:::i;:::-;7341:4;7297:97;:::i;:::-;7420:1;7448:2;7440:6;7437:14;7465:1;7460:748;;;;8252:1;8269:6;8266:89;;;-1:-1:-1;8321:19:6;;;8315:26;8266:89;-1:-1:-1;;5780:1:6;5776:11;;;5772:24;5768:29;5758:40;5804:1;5800:11;;;5755:57;8368:81;;7430:1029;;7460:748;5049:1;5042:14;;;5086:4;5073:18;;-1:-1:-1;;7496:20:6;;;5049:1;5042:14;;;5086:4;5073:18;;7660:9;7682:251;7696:7;7693:1;7690:14;7682:251;;;7778:21;;;7772:28;7757:44;;7828:1;7901:18;;;;7856:15;;;;7719:4;7712:12;7682:251;;;7686:3;7961:6;7952:7;7949:19;7946:203;;;8022:21;;;8016:28;-1:-1:-1;;8107:1:6;8103:14;;;8119:3;8099:24;8095:37;8091:42;8076:58;8061:74;;7946:203;-1:-1:-1;;;;;8195:1:6;8179:14;;;8175:22;8162:36;;-1:-1:-1;7034:1431:6:o;9169:125::-;9234:9;;;9255:10;;;9252:36;;;9268:18;;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "6": [
        {
          "start": 450,
          "length": 32
        },
        {
          "start": 864,
          "length": 32
        },
        {
          "start": 1005,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "IdToGameItemsInfo(uint256)": "ee63b85e",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "createGameItemsInfo(string,uint256)": "50011f46",
    "decimals()": "313ce567",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "redeemGameToken(uint8)": "ececd6be",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ItemNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"IdToGameItemsInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"createGameItemsInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_itemID\",\"type\":\"uint8\"}],\"name\":\"redeemGameToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DegenGamingToken.sol\":\"DegenGamingToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/DegenGamingToken.sol\":{\"keccak256\":\"0xf659e75b325172bb7455a39f79f2d0e05e2426874228df0168229464239f4bda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8b632891dbaf70203ba057de20ea20f33a0031223e869f1bd5bab2063b9e056\",\"dweb:/ipfs/QmbycKr4RpLcrTHu3a3wuEd36P5ZFR5bH6Cw5VuMY2e69h\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "allowance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidApprover"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSpender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ItemNotFound"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "IdToGameItemsInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createGameItemsInfo"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "_itemID",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeemGameToken"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/DegenGamingToken.sol": "DegenGamingToken"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/DegenGamingToken.sol": {
        "keccak256": "0xf659e75b325172bb7455a39f79f2d0e05e2426874228df0168229464239f4bda",
        "urls": [
          "bzz-raw://c8b632891dbaf70203ba057de20ea20f33a0031223e869f1bd5bab2063b9e056",
          "dweb:/ipfs/QmbycKr4RpLcrTHu3a3wuEd36P5ZFR5bH6Cw5VuMY2e69h"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
        "urls": [
          "bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
          "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
        "urls": [
          "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
          "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3",
        "urls": [
          "bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867",
          "dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/DegenGamingToken.sol",
    "id": 218,
    "exportedSymbols": {
      "Context": [
        995
      ],
      "DegenGamingToken": [
        217
      ],
      "ERC20": [
        869
      ],
      "IERC20": [
        947
      ],
      "IERC20Errors": [
        259
      ],
      "IERC20Metadata": [
        973
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2155:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "32:24:0",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 2,
        "nodeType": "ImportDirective",
        "src": "57:55:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 218,
        "sourceUnit": 870,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 217,
        "nodeType": "ContractDefinition",
        "src": "114:2072:0",
        "nodes": [
          {
            "id": 6,
            "nodeType": "VariableDeclaration",
            "src": "155:30:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "8da5cb5b",
            "mutability": "immutable",
            "name": "owner",
            "nameLocation": "180:5:0",
            "scope": 217,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "155:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 8,
            "nodeType": "VariableDeclaration",
            "src": "191:11:0",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "itemId",
            "nameLocation": "196:6:0",
            "scope": 217,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "191:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 15,
            "nodeType": "StructDefinition",
            "src": "209:96:0",
            "nodes": [],
            "canonicalName": "DegenGamingToken.GameItemsInfo",
            "members": [
              {
                "constant": false,
                "id": 10,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "248:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "240:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "240:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "270:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "263:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 11,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "263:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "292:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "284:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 13,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "284:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "GameItemsInfo",
            "nameLocation": "216:13:0",
            "scope": 217,
            "visibility": "public"
          },
          {
            "id": 20,
            "nodeType": "VariableDeclaration",
            "src": "311:55:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "ee63b85e",
            "mutability": "mutable",
            "name": "IdToGameItemsInfo",
            "nameLocation": "349:17:0",
            "scope": 217,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameItemsInfo_$15_storage_$",
              "typeString": "mapping(uint256 => struct DegenGamingToken.GameItemsInfo)"
            },
            "typeName": {
              "id": 19,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 16,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "319:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "311:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameItemsInfo_$15_storage_$",
                "typeString": "mapping(uint256 => struct DegenGamingToken.GameItemsInfo)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 18,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 17,
                  "name": "GameItemsInfo",
                  "nameLocations": [
                    "327:13:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15,
                  "src": "327:13:0"
                },
                "referencedDeclaration": 15,
                "src": "327:13:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_GameItemsInfo_$15_storage_ptr",
                  "typeString": "struct DegenGamingToken.GameItemsInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 41,
            "nodeType": "FunctionDefinition",
            "src": "373:121:0",
            "nodes": [],
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "422:72:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 27,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "432:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 28,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "440:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 29,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "444:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "440:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "432:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
                  "src": "432:18:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 35,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "474:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DegenGamingToken_$217",
                              "typeString": "contract DegenGamingToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DegenGamingToken_$217",
                              "typeString": "contract DegenGamingToken"
                            }
                          ],
                          "id": 34,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "466:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "466:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 36,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "466:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130653138",
                        "id": 37,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "481:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "id": 32,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 709,
                      "src": "460:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "460:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "460:27:0"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "446567656e2047616d696e6720546f6b656e",
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "393:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_966122d878caa61c7914a2d655c77439ed36355671371ae27af3ee22321547a1",
                      "typeString": "literal_string \"Degen Gaming Token\""
                    },
                    "value": "Degen Gaming Token"
                  },
                  {
                    "hexValue": "444754",
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "415:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_efb7686f5df66561ae3fb953df9052f92f2dab4058c529a366f1236017649000",
                      "typeString": "literal_string \"DGT\""
                    },
                    "value": "DGT"
                  }
                ],
                "id": 25,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 22,
                  "name": "ERC20",
                  "nameLocations": [
                    "387:5:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 869,
                  "src": "387:5:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "387:34:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "384:2:0"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "422:0:0"
            },
            "scope": 217,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43,
            "nodeType": "ErrorDefinition",
            "src": "500:17:0",
            "nodes": [],
            "errorSelector": "30cd7471",
            "name": "NotOwner",
            "nameLocation": "506:8:0",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "514:2:0"
            }
          },
          {
            "id": 45,
            "nodeType": "ErrorDefinition",
            "src": "522:28:0",
            "nodes": [],
            "errorSelector": "f4d678b8",
            "name": "InsufficientBalance",
            "nameLocation": "528:19:0",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "547:2:0"
            }
          },
          {
            "id": 47,
            "nodeType": "ErrorDefinition",
            "src": "555:21:0",
            "nodes": [],
            "errorSelector": "d3ed043d",
            "name": "ItemNotFound",
            "nameLocation": "561:12:0",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "573:2:0"
            }
          },
          {
            "id": 59,
            "nodeType": "ModifierDefinition",
            "src": "582:91:0",
            "nodes": [],
            "body": {
              "id": 58,
              "nodeType": "Block",
              "src": "603:70:0",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 49,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "617:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 50,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "621:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "617:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 51,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "631:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "617:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 56,
                  "nodeType": "IfStatement",
                  "src": "613:42:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 53,
                        "name": "NotOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "645:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 54,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "645:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 55,
                    "nodeType": "RevertStatement",
                    "src": "638:17:0"
                  }
                },
                {
                  "id": 57,
                  "nodeType": "PlaceholderStatement",
                  "src": "665:1:0"
                }
              ]
            },
            "name": "onlyOwner",
            "nameLocation": "591:9:0",
            "parameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "600:2:0"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74,
            "nodeType": "FunctionDefinition",
            "src": "705:93:0",
            "nodes": [],
            "body": {
              "id": 73,
              "nodeType": "Block",
              "src": "764:34:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 69,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61,
                        "src": "780:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 70,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "784:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 68,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 709,
                      "src": "774:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "774:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72,
                  "nodeType": "ExpressionStatement",
                  "src": "774:17:0"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 66,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 65,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "754:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 59,
                  "src": "754:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "754:9:0"
              }
            ],
            "name": "mint",
            "nameLocation": "714:4:0",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "727:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "719:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "739:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "731:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "731:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "718:28:0"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "764:0:0"
            },
            "scope": 217,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 103,
            "nodeType": "FunctionDefinition",
            "src": "831:239:0",
            "nodes": [],
            "body": {
              "id": 102,
              "nodeType": "Block",
              "src": "945:125:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 86,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "973:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 87,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "977:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "973:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 85,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              149
                            ],
                            "referencedDeclaration": 149,
                            "src": "963:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "963:21:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 89,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "988:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "963:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e6365",
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "995:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                          "typeString": "literal_string \"Insufficient balance\""
                        },
                        "value": "Insufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                          "typeString": "literal_string \"Insufficient balance\""
                        }
                      ],
                      "id": 84,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "955:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "955:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "955:63:0"
                },
                {
                  "expression": {
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 94,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82,
                      "src": "1028:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 97,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "1053:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 98,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "1057:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 95,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1038:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_DegenGamingToken_$217_$",
                            "typeString": "type(contract super DegenGamingToken)"
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1044:8:0",
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 479,
                        "src": "1038:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) returns (bool)"
                        }
                      },
                      "id": 99,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1038:25:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1028:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "1028:35:0"
                }
              ]
            },
            "baseFunctions": [
              479
            ],
            "functionSelector": "a9059cbb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "840:8:0",
            "overrides": {
              "id": 80,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "913:8:0"
            },
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "866:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "858:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "858:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "886:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "878:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "878:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "848:49:0"
            },
            "returnParameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "936:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "931:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "931:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "930:14:0"
            },
            "scope": 217,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 135,
            "nodeType": "FunctionDefinition",
            "src": "1101:285:0",
            "nodes": [],
            "body": {
              "id": 134,
              "nodeType": "Block",
              "src": "1148:238:0",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 108,
                      "name": "_itemID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "1162:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 109,
                      "name": "itemId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "1173:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1162:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 114,
                  "nodeType": "IfStatement",
                  "src": "1158:44:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 111,
                        "name": "ItemNotFound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "1188:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1188:14:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 113,
                    "nodeType": "RevertStatement",
                    "src": "1181:21:0"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 116,
                            "name": "IdToGameItemsInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "1235:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameItemsInfo_$15_storage_$",
                              "typeString": "mapping(uint256 => struct DegenGamingToken.GameItemsInfo storage ref)"
                            }
                          },
                          "id": 118,
                          "indexExpression": {
                            "id": 117,
                            "name": "_itemID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105,
                            "src": "1253:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1235:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GameItemsInfo_$15_storage",
                            "typeString": "struct DegenGamingToken.GameItemsInfo storage ref"
                          }
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1262:5:0",
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10,
                        "src": "1235:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 120,
                            "name": "IdToGameItemsInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "1281:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameItemsInfo_$15_storage_$",
                              "typeString": "mapping(uint256 => struct DegenGamingToken.GameItemsInfo storage ref)"
                            }
                          },
                          "id": 122,
                          "indexExpression": {
                            "id": 121,
                            "name": "_itemID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105,
                            "src": "1299:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1281:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GameItemsInfo_$15_storage",
                            "typeString": "struct DegenGamingToken.GameItemsInfo storage ref"
                          }
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1308:6:0",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14,
                        "src": "1281:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 115,
                      "name": "transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        103
                      ],
                      "referencedDeclaration": 103,
                      "src": "1213:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1213:111:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "1213:111:0"
                },
                {
                  "expression": {
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 126,
                          "name": "IdToGameItemsInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "1334:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameItemsInfo_$15_storage_$",
                            "typeString": "mapping(uint256 => struct DegenGamingToken.GameItemsInfo storage ref)"
                          }
                        },
                        "id": 128,
                        "indexExpression": {
                          "id": 127,
                          "name": "_itemID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105,
                          "src": "1352:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1334:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GameItemsInfo_$15_storage",
                          "typeString": "struct DegenGamingToken.GameItemsInfo storage ref"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1361:5:0",
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "1334:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 130,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1369:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1373:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1369:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1334:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "1334:45:0"
                }
              ]
            },
            "functionSelector": "ececd6be",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemGameToken",
            "nameLocation": "1110:15:0",
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 105,
                  "mutability": "mutable",
                  "name": "_itemID",
                  "nameLocation": "1132:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 135,
                  "src": "1126:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1126:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1125:15:0"
            },
            "returnParameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1148:0:0"
            },
            "scope": 217,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 149,
            "nodeType": "FunctionDefinition",
            "src": "1422:139:0",
            "nodes": [],
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "1512:49:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 145,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "1545:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 143,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1529:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DegenGamingToken_$217_$",
                          "typeString": "type(contract super DegenGamingToken)"
                        }
                      },
                      "id": 144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1535:9:0",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 455,
                      "src": "1529:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1529:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 142,
                  "id": 147,
                  "nodeType": "Return",
                  "src": "1522:32:0"
                }
              ]
            },
            "baseFunctions": [
              455
            ],
            "functionSelector": "70a08231",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1431:9:0",
            "overrides": {
              "id": 139,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1485:8:0"
            },
            "parameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "1458:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "1450:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1450:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1440:32:0"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "1503:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1503:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1502:9:0"
            },
            "scope": 217,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 171,
            "nodeType": "FunctionDefinition",
            "src": "1589:211:0",
            "nodes": [],
            "body": {
              "id": 170,
              "nodeType": "Block",
              "src": "1624:176:0",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 155,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1706:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1710:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1706:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 154,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          149
                        ],
                        "referencedDeclaration": 149,
                        "src": "1696:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1696:21:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 158,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "1720:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1696:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 163,
                  "nodeType": "IfStatement",
                  "src": "1692:65:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 160,
                        "name": "InsufficientBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1736:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1736:21:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 162,
                    "nodeType": "RevertStatement",
                    "src": "1729:28:0"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 165,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1773:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1777:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1773:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 167,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "1785:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 164,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 742,
                      "src": "1767:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1767:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "1767:26:0"
                }
              ]
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "1598:4:0",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1608:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "1603:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1603:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1602:14:0"
            },
            "returnParameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1624:0:0"
            },
            "scope": 217,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 216,
            "nodeType": "FunctionDefinition",
            "src": "1806:378:0",
            "nodes": [],
            "body": {
              "id": 215,
              "nodeType": "Block",
              "src": "1914:270:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1924:8:0",
                    "subExpression": {
                      "id": 180,
                      "name": "itemId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "1924:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "1924:8:0"
                },
                {
                  "assignments": [
                    185
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 185,
                      "mutability": "mutable",
                      "name": "gameItemsInfo",
                      "nameLocation": "1965:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 215,
                      "src": "1943:35:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GameItemsInfo_$15_storage_ptr",
                        "typeString": "struct DegenGamingToken.GameItemsInfo"
                      },
                      "typeName": {
                        "id": 184,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 183,
                          "name": "GameItemsInfo",
                          "nameLocations": [
                            "1943:13:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 15,
                          "src": "1943:13:0"
                        },
                        "referencedDeclaration": 15,
                        "src": "1943:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GameItemsInfo_$15_storage_ptr",
                          "typeString": "struct DegenGamingToken.GameItemsInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 189,
                  "initialValue": {
                    "baseExpression": {
                      "id": 186,
                      "name": "IdToGameItemsInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "1981:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameItemsInfo_$15_storage_$",
                        "typeString": "mapping(uint256 => struct DegenGamingToken.GameItemsInfo storage ref)"
                      }
                    },
                    "id": 188,
                    "indexExpression": {
                      "id": 187,
                      "name": "itemId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "1999:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1981:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GameItemsInfo_$15_storage",
                      "typeString": "struct DegenGamingToken.GameItemsInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1943:63:0"
                },
                {
                  "expression": {
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 190,
                        "name": "gameItemsInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 185,
                        "src": "2017:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GameItemsInfo_$15_storage_ptr",
                          "typeString": "struct DegenGamingToken.GameItemsInfo storage pointer"
                        }
                      },
                      "id": 192,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2031:5:0",
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "2017:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 193,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2039:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2043:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2039:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2017:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "2017:32:0"
                },
                {
                  "expression": {
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 197,
                        "name": "gameItemsInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 185,
                        "src": "2059:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GameItemsInfo_$15_storage_ptr",
                          "typeString": "struct DegenGamingToken.GameItemsInfo storage pointer"
                        }
                      },
                      "id": 199,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2073:4:0",
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "2059:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 200,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 173,
                      "src": "2080:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "2059:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "2059:26:0"
                },
                {
                  "expression": {
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 203,
                        "name": "gameItemsInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 185,
                        "src": "2095:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GameItemsInfo_$15_storage_ptr",
                          "typeString": "struct DegenGamingToken.GameItemsInfo storage pointer"
                        }
                      },
                      "id": 205,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2109:6:0",
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14,
                      "src": "2095:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 206,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 175,
                      "src": "2118:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2095:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "2095:30:0"
                },
                {
                  "expression": {
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 209,
                        "name": "IdToGameItemsInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "2136:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameItemsInfo_$15_storage_$",
                          "typeString": "mapping(uint256 => struct DegenGamingToken.GameItemsInfo storage ref)"
                        }
                      },
                      "id": 211,
                      "indexExpression": {
                        "id": 210,
                        "name": "itemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "2154:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2136:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GameItemsInfo_$15_storage",
                        "typeString": "struct DegenGamingToken.GameItemsInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 212,
                      "name": "gameItemsInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 185,
                      "src": "2164:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GameItemsInfo_$15_storage_ptr",
                        "typeString": "struct DegenGamingToken.GameItemsInfo storage pointer"
                      }
                    },
                    "src": "2136:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GameItemsInfo_$15_storage",
                      "typeString": "struct DegenGamingToken.GameItemsInfo storage ref"
                    }
                  },
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "2136:41:0"
                }
              ]
            },
            "functionSelector": "50011f46",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 178,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 177,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1904:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 59,
                  "src": "1904:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1904:9:0"
              }
            ],
            "name": "createGameItemsInfo",
            "nameLocation": "1815:19:0",
            "parameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1860:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 216,
                  "src": "1844:21:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1844:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 175,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1883:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 216,
                  "src": "1875:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1875:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1834:62:0"
            },
            "returnParameters": {
              "id": 179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1914:0:0"
            },
            "scope": 217,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "ERC20",
              "nameLocations": [
                "143:5:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 869,
              "src": "143:5:0"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "143:5:0"
          }
        ],
        "canonicalName": "DegenGamingToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          217,
          869,
          259,
          973,
          947,
          995
        ],
        "name": "DegenGamingToken",
        "nameLocation": "123:16:0",
        "scope": 218,
        "usedErrors": [
          43,
          45,
          47,
          229,
          234,
          239,
          248,
          253,
          258
        ],
        "usedEvents": [
          881,
          890
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 0
}